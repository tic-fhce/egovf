{"version":3,"file":"js/394.bd7409f2.js","mappings":"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","sources":["webpack://egovf/./src/modules/egovf-scc/services/sccService.js","webpack://egovf/./src/modules/egovf-scc/views/BiometricosView.vue","webpack://egovf/./src/modules/egovf-scc/views/BiometricosView.vue?ae46"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL_EGOVF_SCC } from \"@env\";\r\nconst msccUrl = API_URL_EGOVF_SCC;\r\n\r\nexport default class SccService {\r\n\r\n  // Funcion que debuelve informacion del perfil de usuario registrado en el biometrico\r\n  getPerfil(cif) {\r\n    return axios.get(msccUrl + \"biometrico/getPerfil\", {\r\n      params: {\r\n        cif: cif,\r\n      },\r\n    });\r\n  }\r\n  getListarCifCero() {\r\n    return axios.get(msccUrl + \"biometrico/listarCifCero\");\r\n  }\r\n\r\n  getHorario(gestion, cif) {\r\n    return axios.get(msccUrl + \"horario/getHorario\", {\r\n      params: {\r\n        gestion: gestion,\r\n        cif: cif\r\n      },\r\n    });\r\n  }\r\n  // Funcion que actualiza los datos del biomatrico con el usuario\r\n  updateBiometrico(biometricoDtoResponse) {\r\n    return axios.put(msccUrl + \"biometrico/updateBiometrico\", biometricoDtoResponse);\r\n  }\r\n  getAvisoAll() {\r\n    return axios.get(msccUrl + \"aviso/getAvisoAll\");\r\n  }\r\n  //Avisos\r\n  getAviso() {\r\n    return axios.get(msccUrl + \"aviso/getAviso\");\r\n  }\r\n  getObsUsuario(cif, gestion, mes) {\r\n    return axios.get(msccUrl + \"obs/getObsUsuario\", {\r\n      params: {\r\n        cif: cif,\r\n        gestion: gestion,\r\n        mes: mes,\r\n      },\r\n    });\r\n  }\r\n  addObsEmpleado(obs) {\r\n    // Funcion que permite registrar los datos de la observacion del propio empleado\r\n    const obsDtoRequest = {\r\n      \"cif\": obs.cif,\r\n      \"uidobs\": obs.uidobs,\r\n      \"fechainicio\": obs.fechainicio,\r\n      \"fechafin\": obs.fechafin,\r\n      \"gestion\": obs.fechainicio.substring(0, 4),\r\n      \"mes\": obs.fechainicio.substring(5, 7),\r\n      \"di\": obs.fechainicio.substring(8, 10),\r\n      \"df\": obs.fechafin.substring(8, 10),\r\n      \"detalle\": obs.detalle,\r\n      \"imagen\": obs.imagen,\r\n      \"tipo\": obs.tipo,\r\n      \"hora\": obs.hora,\r\n      \"h\": obs.hora.substring(0, 2),\r\n      \"m\": obs.hora.substring(3, 5),\r\n      \"url\": obs.url,\r\n      \"estado\": 0,\r\n      \"tipoId\":0\r\n    };\r\n    return axios.post(msccUrl + \"obs/addObs\", obsDtoRequest);\r\n  }\r\n  updateObsEmpleado(obs) {\r\n    // Funcion que permite actualizar los datos de la observacion del propio empleado\r\n    const obsDtoResponse = {\r\n      \"id\": obs.id,\r\n      \"cif\": obs.cif,\r\n      \"uidobs\": obs.uidobs,\r\n      \"fechainicio\": obs.fechainicio,\r\n      \"fechafin\": obs.fechafin,\r\n      \"gestion\": obs.fechainicio.substring(0, 4),\r\n      \"mes\": obs.fechainicio.substring(5, 7),\r\n      \"di\": obs.fechainicio.substring(8, 10),\r\n      \"df\": obs.fechafin.substring(8, 10),\r\n      \"detalle\": obs.detalle,\r\n      \"imagen\": obs.imagen,\r\n      \"tipo\": obs.tipo,\r\n      \"hora\": obs.hora,\r\n      \"h\": obs.hora.substring(0, 2),\r\n      \"m\": obs.hora.substring(3, 5),\r\n      \"url\": obs.url,\r\n      \"estado\": obs.estado,\r\n      \"tipoId\":0\r\n    };\r\n    return axios.put(msccUrl + \"obs/updateObs\", obsDtoResponse);\r\n  }\r\n\r\n  getListaHorario(cif, gestion) {\r\n    return axios.get(msccUrl + \"horario/getListaHorario\", {\r\n      params: {\r\n        cif: cif,\r\n        gestion: gestion,\r\n      },\r\n    });\r\n  }\r\n  getReporteMes(reporte) {\r\n    return axios.get(msccUrl + \"marcado/reporteMes\", {\r\n      params: {\r\n        cif: reporte.cif,\r\n        gestion: reporte.gestion,\r\n        mes: reporte.mes,\r\n        di: reporte.di,\r\n        df: reporte.df,\r\n      },\r\n    });\r\n  }\r\n\r\n  getReporteMesDia(reporte) {\r\n    return axios.get(msccUrl + \"marcado/reporteMesDia\", {\r\n      params: {\r\n        cif: reporte.cif,\r\n        gestion: reporte.gestion,\r\n        mes: reporte.mes,\r\n        di: reporte.di,\r\n        df: reporte.df\r\n      },\r\n    });\r\n  }\r\n\r\n  // Funcion que permite registrar los horarios del usuario\r\n  addHorario(horario) {\r\n    const horarioDtoRequest={\r\n      \"cif\": horario.cif,\r\n      \"fecha\":horario.fecha,\r\n      \"salida\":horario.salida,\r\n      \"tipo\":horario.tipo,\r\n      \"lem\":horario.lem,\r\n      \"lsm\":horario.lsm,\r\n      \"let\":horario.let,\r\n      \"lst\":horario.lst,\r\n      \"mem\":horario.mem,\r\n      \"msm\":horario.msm,\r\n      \"met\":horario.met,\r\n      \"mst\":horario.mst,\r\n      \"miem\":horario.miem,\r\n      \"mism\":horario.mism,\r\n      \"miet\":horario.miet,\r\n      \"mist\":horario.mist,\r\n      \"jem\":horario.jem,\r\n      \"jsm\":horario.jsm,\r\n      \"jet\":horario.jet,\r\n      \"jst\":horario.jst,\r\n      \"vem\":horario.vem,\r\n      \"vsm\":horario.vsm,\r\n      \"vet\":horario.vet,\r\n      \"vst\":horario.vst,\r\n      \"sem\":horario.sem,\r\n      \"ssm\":horario.ssm,\r\n      \"set\":horario.set,\r\n      \"sst\":horario.sst,\r\n      \"dem\":horario.dem,\r\n      \"dsm\":horario.dsm,\r\n      \"det\":horario.det,\r\n      \"dst\":horario.dst\r\n    }\r\n    return axios.post(msccUrl + \"horario/addHorario\", horarioDtoRequest);\r\n  }\r\n  // Funcion que permite registrar los datos de la observacion de los usuarios\r\n  addObs(obs) {\r\n    const obsDtoRequest = {\r\n      \"cif\": obs.cif,\r\n      \"uidobs\": obs.uidobs,\r\n      \"fechainicio\": obs.fechainicio,\r\n      \"fechafin\": obs.fechafin,\r\n      \"gestion\": obs.fechainicio.substring(0, 4),\r\n      \"mes\": obs.fechainicio.substring(5, 7),\r\n      \"di\": obs.fechainicio.substring(8, 10),\r\n      \"df\": obs.fechafin.substring(8, 10),\r\n      \"detalle\": obs.detalle,\r\n      \"imagen\": obs.imagen,\r\n      \"tipo\": obs.tipo,\r\n      \"hora\": obs.hora,\r\n      \"h\": obs.hora.substring(0, 2),\r\n      \"m\": obs.hora.substring(3, 5),\r\n      \"url\": obs.url,\r\n      \"estado\": 1,\r\n      \"tipoId\":0\r\n    };\r\n    return axios.post(msccUrl + \"obs/addObs\", obsDtoRequest);\r\n  }\r\n  // Funcion que permite actualizar los datos de la observacion de los usuarios\r\n  updateObs(obs) {\r\n    const obsDtoResponse = {\r\n      \"id\": obs.id,\r\n      \"cif\": obs.cif,\r\n      \"uidobs\": obs.uidobs,\r\n      \"fechainicio\": obs.fechainicio,\r\n      \"fechafin\": obs.fechafin,\r\n      \"gestion\": obs.gestion,\r\n      \"mes\": obs.mes,\r\n      \"di\": obs.di,\r\n      \"df\": obs.df,\r\n      \"detalle\": obs.detalle,\r\n      \"imagen\": obs.imagen,\r\n      \"tipo\": obs.tipo,\r\n      \"hora\": obs.hora,\r\n      \"h\": obs.h,\r\n      \"m\": obs.m,\r\n      \"url\": obs.url,\r\n      \"estado\": obs.estado,\r\n      \"tipoId\":obs.tipoId\r\n    };\r\n    return axios.put(msccUrl + \"obs/updateObs\", obsDtoResponse);\r\n  }\r\n\r\n  getListaObs(rgestion) {\r\n    return axios.get(msccUrl + \"obs/getListaObs\",{\r\n      params:{\r\n        gestion:rgestion\r\n      }\r\n    });\r\n  }\r\n\r\n  addObsAll(obs) {\r\n    // Funcion que registra observaciones masibas\r\n    const obsDtoObj = {\r\n      \"id\": 0,\r\n      \"cif\": obs.cif,\r\n      \"sexo\": obs.sexo,\r\n      \"uidobs\": obs.uidobs,\r\n      \"fechainicio\": obs.fechainicio,\r\n      \"fechafin\": obs.fechafin,\r\n      \"gestion\": obs.fechainicio.substring(0, 4),\r\n      \"mes\": obs.fechainicio.substring(5, 7),\r\n      \"di\": obs.fechainicio.substring(8, 10),\r\n      \"df\": obs.fechafin.substring(8, 10),\r\n      \"detalle\": obs.detalle,\r\n      \"imagen\": obs.imagen,\r\n      \"tipo\": obs.tipo,\r\n      \"hora\": obs.hora,\r\n      \"h\": obs.hora.substring(0, 2),\r\n      \"m\": obs.hora.substring(3, 5),\r\n      \"url\": obs.url,\r\n      \"estado\": 1\r\n    };\r\n    return axios.post(msccUrl + \"obs/addObsAll\", obsDtoObj);\r\n  }\r\n\r\n  //Services para el MODELO AVISO\r\n  addAviso(aviso) {\r\n    const avisoDtoRequest = {\r\n      \"titulo\": aviso.titulo,\r\n      \"detalle\": aviso.detalle,\r\n      \"icon\": aviso.icon,\r\n      \"estado\": 1\r\n    };\r\n    return axios.post(msccUrl + \"aviso/addAviso\", avisoDtoRequest);\r\n  }\r\n\r\n  updateAviso(aviso) {\r\n    const avisoDtoResponse = {\r\n      \"id\": aviso.id,\r\n      \"titulo\": aviso.titulo,\r\n      \"detalle\": aviso.detalle,\r\n      \"icon\": aviso.icon,\r\n      \"estado\": aviso.estado\r\n    };\r\n    return axios.put(msccUrl + \"aviso/updateAviso\", avisoDtoResponse);\r\n  }\r\n  getRecord(record) {\r\n    return axios.get(msccUrl + \"marcado/reporteTotal\", {\r\n      params: {\r\n        gestion: record.gestion,\r\n        mes: record.mes,\r\n        tipo: record.tipo\r\n      },\r\n    });\r\n  }\r\n\r\n  //###############################################################################\r\n  \r\n  getListarBiometrico() {\r\n    return axios.get(msccUrl + \"biometrico/listarBiometrico\");\r\n  }\r\n\r\n  // funcion getLbioemtrico debuelve una lista de personas registradas en el biometrico de acuerdo al parametro tipo\r\n  getLBiometricoTipo(tipo) {\r\n    return axios.get(msccUrl + \"biometrico/listarBiometricoTipo\", {\r\n      params: {\r\n        tipo: tipo,\r\n      },\r\n    });\r\n  }\r\n  \r\n  updateBiometricoTipo(empleado, estado) {\r\n    var tipo = 0;\r\n    if (estado == 1) {\r\n      tipo = empleado.tipoempleado_id;\r\n    }\r\n    const biometrico = {\r\n      id: 0,\r\n      _01user_id: 0,\r\n      _02nombre: \"\",\r\n      _03cif: empleado.cif,\r\n      _04estado: 0,\r\n      _05horario_id: 0,\r\n      _06lugar: \"\",\r\n      _07id_tipo: tipo,\r\n      _08detalle: \"\",\r\n      _09sexo: 0,\r\n    };\r\n    return axios.put(msccUrl + \"biometrico/updateBiometricoTipo\", biometrico);\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  getObs(cif, gestion, mes) {\r\n    return axios.get(msccUrl + \"obs/getObs\", {\r\n      params: {\r\n        cif: cif,\r\n        gestion: gestion,\r\n        mes: mes,\r\n      },\r\n    });\r\n  }\r\n  estadoBiometrico(bio) {\r\n    console.log(bio);\r\n    return axios.put(msccUrl + \"biometrico/estadoBiometrico\", bio);\r\n  }\r\n  updateTipo(cif, tipo) {\r\n    //Servicio para cambiar el tipo de Empleado\r\n    return axios.put(msccUrl + \"biometrico/updateTipo\", {\r\n      params: {\r\n        cif: cif,\r\n        tipo: tipo,\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n  // Services para el  MODELO EQUIPO\r\n  getListaEquipo() {\r\n    return axios.get(msccUrl + \"equipo/listar\");\r\n  }\r\n  addEquipo(equipo) {\r\n    return axios.post(msccUrl + \"equipo/addEquipo\", equipo);\r\n  }\r\n  updateEquipo(equipo) {\r\n    return axios.put(msccUrl + \"equipo/updateEquipo\", equipo);\r\n  }\r\n  \r\n}\r\n","<template>\r\n    <CRow>\r\n        <CCol :lg=\"4\" v-for=\"perfil in listaPerfil\" :key=\"perfil.id\">\r\n            <br>\r\n            <CCard>\r\n                <CCardHeader class=\"headercolor\"> <CIcon icon=\"cil-monitor\"></CIcon> - UID : {{perfil.user_id}} </CCardHeader>\r\n                <CCardBody class=\"datos\">\r\n                    <CRow class=\"mb-2\">\r\n                        <CCol><strong>ID-Biometrico:</strong></CCol>\r\n                        <CCol>{{ perfil.id }}</CCol>\r\n                    </CRow>\r\n                    <CRow class=\"mb-2\">\r\n                        <CCol><strong>UID:</strong></CCol>\r\n                        <CCol>{{ perfil.user_id }}</CCol>\r\n                    </CRow>\r\n                    <CRow class=\"mb-2\">\r\n                        <CCol><strong>Estado:</strong></CCol>\r\n                        <CCol>\r\n                            <CBadge :color=\"perfil.estado == 0 ? 'warning' : 'success'\">\r\n                                {{ perfil.estado == 0 ? 'Inactivo' : 'Activo' }}\r\n                            </CBadge>\r\n                        </CCol>\r\n                    </CRow>\r\n\r\n                    <CRow class=\"mb-2\">\r\n                        <CCol><strong>Sigla:</strong></CCol>\r\n                        <CCol>{{ perfil.lugar }}</CCol>\r\n                    </CRow>\r\n                    <CRow class=\"mb-2\">\r\n                        <CCol><strong>Horario:</strong></CCol>\r\n                        <CCol>\r\n                            <CBadge :color=\"perfil.horario_id == 0 ? 'danger' : 'success'\">\r\n                                {{ perfil.horario_id == 0 ? 'Sin Horario' : 'Horario Registrado' }}\r\n                            </CBadge>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CRow><br><hr></CRow>\r\n                    <CRow class=\"mb-2 text-center\">\r\n                        <CCol>{{ perfil.nombre }}<br>nombre registrado</CCol>\r\n                    </CRow> \r\n                </CCardBody>\r\n                <CCardFooter>\r\n                    <CCol class=\"text-center\"><strong>{{perfil.detalle}}</strong></CCol> <!-- Aquí puedes agregar más detalles si lo deseas -->\r\n                </CCardFooter>\r\n            </CCard>\r\n        </CCol>\r\n    </CRow>\r\n\r\n</template>\r\n<script>\r\n//Importamos Servicios\r\nimport SccService from '@/modules/egovf-scc/services/sccService';\r\nexport default {\r\n    name:'BiometricosView',\r\n    data(){\r\n        return {\r\n            listaPerfil:[],\r\n            sccService:null,\r\n            usuario:{\r\n                token:'',\r\n                cif:'',\r\n                correo:'',\r\n                celular:'',\r\n                pass:'',\r\n                unidad:'',\r\n                sigla:''\r\n            }\r\n\r\n        }\r\n    },\r\n    mounted(){\r\n        this.cifCiudadano = this.$cookies.get('cif');\r\n        this.getDatos();\r\n        this.getPerfilBiometrico();\r\n\r\n    },\r\n    created(){\r\n        //Creamos los Sercicios\r\n        this.sccService = new SccService();\r\n    },\r\n    methods:{\r\n        getDatos(){\r\n            //cargamos datos del Usuario\r\n            if(this.$cookies.get('cif')!=null){\r\n                this.usuario.token=this.$cookies.get('token');\r\n                this.usuario.cif=this.$cookies.get('cif');\r\n                this.usuario.correo=this.$cookies.get('correo');\r\n                this.usuario.celular=this.$cookies.get('celular');\r\n                this.usuario.pass=this.$cookies.get('pass');\r\n                this.usuario.unidad = this.$cookies.get('unidad');\r\n                this.usuario.sigla = this.$cookies.get('sigla');\r\n            }\r\n        },\r\n        async getPerfilBiometrico(){ // funcion que debuelve una lista del Usuario registrado en los biometricos \r\n            await this.sccService.getPerfil(this.usuario.cif).then(response=>{\r\n                this.listaPerfil = response.data;\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nCBadge {\r\n  padding: 6px 10px;\r\n  font-size: 0.9rem;\r\n}\r\n.datos{\r\n    font-size: 12px;\r\n}\r\n</style>","import { render } from \"./BiometricosView.vue?vue&type=template&id=6dd5010b&scoped=true\"\nimport script from \"./BiometricosView.vue?vue&type=script&lang=js\"\nexport * from \"./BiometricosView.vue?vue&type=script&lang=js\"\n\nimport \"./BiometricosView.vue?vue&type=style&index=0&id=6dd5010b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6dd5010b\"]])\n\nexport default __exports__"],"names":["msccUrl","API_URL_EGOVF_SCC","SccService","getPerfil","cif","axios","get","params","getListarCifCero","getHorario","gestion","updateBiometrico","biometricoDtoResponse","put","getAvisoAll","getAviso","getObsUsuario","mes","addObsEmpleado","obs","obsDtoRequest","uidobs","fechainicio","fechafin","substring","detalle","imagen","tipo","hora","url","post","updateObsEmpleado","obsDtoResponse","id","estado","getListaHorario","getReporteMes","reporte","di","df","getReporteMesDia","addHorario","horario","horarioDtoRequest","fecha","salida","lem","lsm","let","lst","mem","msm","met","mst","miem","mism","miet","mist","jem","jsm","jet","jst","vem","vsm","vet","vst","sem","ssm","set","sst","dem","dsm","det","dst","addObs","updateObs","h","m","tipoId","getListaObs","rgestion","addObsAll","obsDtoObj","sexo","addAviso","aviso","avisoDtoRequest","titulo","icon","updateAviso","avisoDtoResponse","getRecord","record","getListarBiometrico","getLBiometricoTipo","updateBiometricoTipo","empleado","tipoempleado_id","biometrico","_01user_id","_02nombre","_03cif","_04estado","_05horario_id","_06lugar","_07id_tipo","_08detalle","_09sexo","getObs","estadoBiometrico","bio","console","log","updateTipo","getListaEquipo","addEquipo","equipo","updateEquipo","_createElementVNode","_createBlock","_component_CRow","default","_withCtx","_createElementBlock","_Fragment","_renderList","$data","listaPerfil","perfil","_component_CCol","lg","key","_hoisted_1","_createVNode","_component_CCard","_component_CCardHeader","class","_component_CIcon","_createTextVNode","_toDisplayString","user_id","_","_component_CCardBody","_hoisted_2","_hoisted_3","_hoisted_4","_component_CBadge","color","_hoisted_5","lugar","_hoisted_6","horario_id","_hoisted_7","_hoisted_8","nombre","_hoisted_9","_component_CCardFooter","name","data","sccService","usuario","token","correo","celular","pass","unidad","sigla","mounted","this","cifCiudadano","$cookies","getDatos","getPerfilBiometrico","created","methods","then","response","__exports__","render"],"sourceRoot":""}