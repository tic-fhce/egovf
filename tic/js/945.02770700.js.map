{"version":3,"file":"js/945.02770700.js","mappings":"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","sources":["webpack://egovf/./src/modules/egovf-emp/services/empleadoService.js","webpack://egovf/./src/modules/egovf/services/egovfService.js","webpack://egovf/./src/views/Usuario/UModuloEmpView.vue","webpack://egovf/./src/components/Usuario/ComponenteMEmpVue.vue","webpack://egovf/./src/components/Usuario/ComponenteMEmpVue.vue?e330","webpack://egovf/./src/views/Usuario/UModuloEmpView.vue?d6b0"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL_EGOVF_EMP } from \"@env\";\r\n\r\nconst empleadoUrl = API_URL_EGOVF_EMP;\r\n\r\nexport default class EmpleadoService {\r\n  //EMPLEADO MODULO\r\n\r\n  getEmpleado(cif) {\r\n    return axios.get(empleadoUrl + \"empleado/getEmpleado\", {\r\n      params: {\r\n        cif: cif,\r\n      },\r\n    });\r\n  }\r\n  getListaTipoEmpleado() {\r\n    return axios.get(empleadoUrl + \"tipo/listar\");\r\n  }\r\n  getListarEmpleadoModuloCif(cif) {\r\n    return axios.get(empleadoUrl + \"modulo/getListarEmpleadoModuloCif\", {\r\n      params: {\r\n        cif: cif,\r\n      },\r\n    });\r\n  }\r\n  getListarEmpleadoModulo(cif) {\r\n    return axios.get(empleadoUrl + \"modulo/getListarEmpleadoModulo\", {\r\n      params: {\r\n        cif: cif,\r\n      },\r\n    });\r\n  }\r\n  addContrato(contrato) {\r\n    const fecha = new Date();\r\n    let numero = contrato.numerocontrato;\r\n    const contratoDtoRequest = {\r\n      \"cif\": contrato.cif,\r\n      \"numero_contrato\": numero.toUpperCase(),\r\n      \"servicio\": contrato.servicio,\r\n      \"unidad\": contrato.unidad,\r\n      \"inicio\": contrato.inicio,\r\n      \"fin\":contrato.fin,\r\n      \"gestion\": fecha.getFullYear(),\r\n      \"detalle\": contrato.detalle,\r\n      \"idTipoEmpleado\": contrato.idTipoEmpleado,\r\n      \"cargo\":contrato.cargo,\r\n      \"foto\":contrato.foto\r\n    };\r\n    return axios.post(empleadoUrl + \"contrato/addContrato\", contratoDtoRequest);\r\n  }\r\n  updateContrato(contrato,foto) {\r\n    let numero = contrato.numerocontrato;\r\n    const contratoDtoResponse = {\r\n      \"id\": contrato.id,\r\n      \"cif\": contrato.cif,\r\n      \"numero_contrato\": numero.toUpperCase(),\r\n      \"servicio\": contrato.servicio,\r\n      \"unidad\": contrato.unidad,\r\n      \"inicio\": contrato.inicio,\r\n      \"fin\": contrato.fin,\r\n      \"gestion\": contrato.gestion,\r\n      \"detalle\": contrato.detalle,\r\n      \"idTipoEmpleado\":contrato.idTipoEmpleado,\r\n      \"foto\":foto,\r\n      \"cargo\":contrato.cargo\r\n    };\r\n    return axios.put(empleadoUrl + \"contrato/updateContrato\", contratoDtoResponse);\r\n  }\r\n  getTipoEmpleado(id) {\r\n    // Servicio quer debuelbe el Detalle del Empleado {Docente, Admisnitrativo, ect} de ModuloEmp tipoempleado\r\n    return axios.get(empleadoUrl + \"tipo/getTipoEmpleado\", {\r\n      params: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  getListaEmpleado(tipo) {\r\n    // Funcion que regresa una lista de empleados de acuerdo a su tipo\r\n    return axios.get(empleadoUrl + \"empleado/getListaEmpleado\", {\r\n      params: {\r\n        tipo: tipo,\r\n      },\r\n    });\r\n  }\r\n  getEmpleados() {\r\n    // Funcion que regresa una lista de empleados de acuerdo a su tipo\r\n    return axios.get(empleadoUrl + \"empleado/getEmpleados\");\r\n  }\r\n\r\n  getListaModulo() {\r\n    return axios.get(empleadoUrl + \"modulo/listar\");\r\n  }\r\n\r\n  addEmpleadoModulo(modulo) {\r\n    const empleadoModuloDtoRequest = {\r\n      \"cif\": modulo.cif,\r\n      \"id_modulo\": modulo.id_modulo,\r\n      \"estado\": 1\r\n    };\r\n    return axios.post(empleadoUrl + \"empmodulo/addEmpleadoModulo\", empleadoModuloDtoRequest);\r\n  }\r\n  \r\n  updateEmpleadoEliminar(empleado) {\r\n    const empleadoDtoResponse = {\r\n      \"id\": empleado.id,\r\n      \"cif\": empleado.cif,\r\n      \"tipo_empleado_id\": 0,\r\n      \"fecha\": '',\r\n      \"estado\": 0,\r\n      \"salida\": '',\r\n      \"foto\":''\r\n    };\r\n    return axios.put(empleadoUrl + \"empleado/updateEmpleado\", empleadoDtoResponse);\r\n  }\r\n\r\n  updateFoto(cif,foto) {\r\n    const empleadoDtoResponse = {\r\n      \"id\": 0,\r\n      \"cif\": cif,\r\n      \"tipo_empleado_id\": 0,\r\n      \"fecha\": '',\r\n      \"estado\": 0,\r\n      \"salida\": '',\r\n      \"foto\":foto\r\n    };\r\n    return axios.put(empleadoUrl + \"empleado/updateFoto\", empleadoDtoResponse);\r\n  }\r\n  \r\n  ////////////////////////////////\r\n  \r\n  \r\n  \r\n\r\n  \r\n  getListaEmpleadoTipo(tipo) {\r\n    return axios.get(empleadoUrl + \"empleado/listarTipo\", {\r\n      params: {\r\n        tipo: tipo,\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL_EGOVF_USER } from \"@env\";\r\nconst egovfUrl = API_URL_EGOVF_USER;\r\n\r\nexport default class EgovfService {\r\n  headersUsuario(token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n  }\r\n\r\n  getEgovf(cif) {\r\n    return axios.get(egovfUrl + \"ciudadano/getEgovf\", {\r\n      params: {\r\n        cif: cif,\r\n      },\r\n    });\r\n  }\r\n  getListaCiudadano() {\r\n    return axios.get(egovfUrl + \"ciudadano/getListaCiudadano\");\r\n  }\r\n  getListaCiudadanoPublico() {\r\n    return axios.get(egovfUrl + \"ciudadano/getListaCiudadanoPublico\");\r\n  }\r\n  getListaEmpleado() {\r\n    //Servicio que retorna una lista de Ciudadanos que son empleados\r\n    return axios.get(egovfUrl + \"ciudadano/getListaEmpleado\");\r\n  }\r\n}\r\n","<template>\r\n    <!-- Componente de Modulos para el Ciudadano -->\r\n    <br>\r\n    <ComponenteMEmpVue :emp=\"egovf\"/> \r\n</template>\r\n\r\n<script>\r\n// Importamos los Componentes\r\nimport ComponenteMEmpVue from '@/components/Usuario/ComponenteMEmpVue.vue';\r\n// End\r\n\r\n// Declaramos los Servicios\r\nimport EgovfService from '@/modules/egovf/services/egovfService';\r\n// End\r\n\r\nexport default {\r\n    name:'UModuloEmpView',\r\n    components:{\r\n        ComponenteMEmpVue\r\n    },\r\n    data(){\r\n        return {\r\n            titulo:'Modulos del Empleado',\r\n            egovfService:null,\r\n            cifCiudadano:'',\r\n            usuario:{\r\n                token:'',\r\n                cif:'',\r\n                correo:'',\r\n                celular:'',\r\n                pass:'',\r\n                unidad:'',\r\n                sigla:''\r\n            },\r\n            egovf:{\r\n                idPersona:0,\r\n                nombre:'',\r\n                paterno:'',\r\n                materno:'',\r\n                fecha:'',\r\n                sexo:0,\r\n                idUsuario:0,\r\n                cif:0,\r\n                matricula:0,\r\n                ci:'',\r\n                ci_com:0,\r\n                complemento:'',\r\n                correo:'',\r\n                celular:'',\r\n                pass:'',\r\n                unidad:'',\r\n                dependiente:'',\r\n                sigla:'',\r\n            }\r\n        }\r\n    },\r\n    beforeCreate(){        \r\n        if(this.$cookies.get('cif')==null){\r\n            this.$router.push('/');\r\n        }\r\n    },\r\n    created(){\r\n        this.egovfService = new EgovfService();\r\n    },\r\n    mounted(){\r\n        this.cifCiudadano = this.$cookies.get('cif');\r\n        this.getDatos();\r\n        this.getEgovf();\r\n    },\r\n    methods:{\r\n        getDatos(){\r\n            //cargamos datos del Usuario\r\n            if(this.$cookies.get('cif')!=null){\r\n                this.usuario.token=this.$cookies.get('token');\r\n                this.usuario.cif=this.$cookies.get('cif');\r\n                this.usuario.correo=this.$cookies.get('correo');\r\n                this.usuario.celular=this.$cookies.get('celular');\r\n                this.usuario.pass=this.$cookies.get('pass');\r\n                this.usuario.unidad = this.$cookies.get('unidad');\r\n                this.usuario.sigla = this.$cookies.get('sigla');\r\n            }\r\n        },\r\n        async getEgovf(){\r\n            this.egovfService.headersUsuario(this.usuario.token);\r\n            await this.egovfService.getEgovf(this.cifCiudadano).then((response) =>{\r\n                this.egovf = response.data;\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","<template>\r\n    <CRow>\r\n        <CCol :lg=\"12\">\r\n            <CCard>\r\n                <CCardHeader class=\"headercolor\">\r\n                    <CRow>\r\n                        <CCol :lg=\"12\">Modulos Del Empleado</CCol>\r\n                    </CRow>\r\n                </CCardHeader>\r\n\r\n                <CCardBody>\r\n                    <CCol :xs=\"12\" class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><CBadge color=\"dark\">Tipo : {{ empleado.empleado }}</CBadge></td>\r\n                                    <td><CBadge color=\"dark\">Ingreso : {{ empleado.fecha }}</CBadge></td>\r\n                                    <td><CBadge color=\"dark\">Salida : {{ empleado.salida }}</CBadge></td>\r\n                                    <td>\r\n                                        <CBadge v-if=\"empleado.estado==1\" color=\"success\" >Estado : Activo</CBadge>\r\n                                        <CBadge v-else color=\"danger\">Estado : Inactivo</CBadge>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </CCol>\r\n\r\n                    <!-- Modulos del Empleado-->\r\n                    <CCol :xs=\"12\">\r\n                        <CRow>\r\n                            <CCol :lg=\"2\" class=\"text-center \" v-for=\"l in listaModuloCif\" :key=\"l.id\">\r\n                                <br>\r\n                                <CCard>\r\n                                    <CCardImage orientation=\"top\" :src=egovf.foto></CCardImage>\r\n                                    <CCardBody>\r\n                                        {{ l._01nombre }}\r\n                                    </CCardBody>\r\n                                    <CCardFooter class=\"text-center\">\r\n                                        <CButton color=\"success\" class=\"font\">{{ l._01nombre}}</CButton>\r\n                                    </CCardFooter>\r\n                                </CCard>\r\n                            </CCol>    \r\n                        </CRow>\r\n                    </CCol>\r\n                    <!-- End Modulos del Empleado-->\r\n                    \r\n                    <hr>\r\n                    <!-- Contratos del Empleado-->\r\n                    <CCol :xs=\"12\" class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th><th>N° Contrato</th><th>Servicio</th><th>Fechas</th><th>Detalle</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"contrato in contratos\" :key=\"contrato.id\">\r\n                                    <td>{{ contrato.id }}</td>\r\n                                    <td>\r\n                                        {{ contrato.numeroContrato}}<br>\r\n                                        {{ contrato.unidad }}\r\n                                    </td>\r\n                                    <td>{{ contrato.servicio }}</td>\r\n                                    <td>\r\n                                        <CBadge color=\"dark\">Fecha Inicio: {{ contrato.inicio }}</CBadge>\r\n                                        <CBadge color=\"dark\">Fecha Fin:{{ contrato.fin }}</CBadge>\r\n                                        <CBadge color=\"dark\">Gestion: {{ contrato.gestion }}</CBadge>\r\n                                    </td>\r\n                                    <td>{{ contrato.detalle }}</td>\r\n                                </tr>\r\n                                        \r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr></tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </CCol>\r\n                    <!--End Contratos del Empleado-->\r\n\r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n    </CRow>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n// Importamos  los Servicios\r\nimport EmpleadoService from '@/modules/egovf-emp/services/empleadoService';\r\n\r\n// End\r\n\r\nexport default {\r\n    name: 'ComponenteMEmpVue',\r\n    props: ['emp'],\r\n    components:{\r\n    },\r\n    data() {\r\n        return {\r\n            empleadoService: null,\r\n            listaModulo: [],\r\n            listaModuloCif: [],\r\n            contratos: [],\r\n            getPB: true,\r\n            empleado: {\r\n                id: 0,\r\n                cif: 0,\r\n                empleado: '',\r\n                tipoempleado_id: 0,\r\n                fecha: '',\r\n                estado: 0,\r\n                salida: '',\r\n                contratos: []\r\n            },\r\n            usuario: {\r\n                token: '',\r\n                cif: '',\r\n                correo: '',\r\n                celular: '',\r\n                pass: '',\r\n                unidad: '',\r\n                sigla: ''\r\n            },\r\n            empleado_modulo: {\r\n                cif: 0,\r\n                id_modulo: 0\r\n            },\r\n            egovf: {\r\n                idPersona: 0,\r\n                nombre: '',\r\n                paterno: '',\r\n                materno: '',\r\n                fecha: '',\r\n                sexo: 0,\r\n                idUsuario: 0,\r\n                cif: 0,\r\n                matricula: 0,\r\n                ci: '',\r\n                ci_com: 0,\r\n                complemento: '',\r\n                correo: '',\r\n                celular: '',\r\n                pass: '',\r\n                unidad: '',\r\n                dependiente: '',\r\n                sigla: '',\r\n            }\r\n        };\r\n    },\r\n    beforeCreate() {\r\n        if (this.$cookies.get('cif') == null) {\r\n            this.$router.push('/');\r\n        }\r\n    },\r\n    created() {\r\n        this.empleadoService = new EmpleadoService();\r\n    },\r\n    mounted() {\r\n        this.getDatos();\r\n    },\r\n    updated() {\r\n        this.egovf = this.emp;\r\n        if (this.egovf.cif > 0 && this.getPB) {\r\n            this.getEmpleado();\r\n            this.getListarEmpleadoModuloCif();\r\n            this.getPB = false;\r\n        }\r\n    },\r\n    methods: {\r\n        // Funcion par arecuperar informacion del Usuaario de las Cokkies\r\n        getDatos() {\r\n            if (this.$cookies.get('cif') != null) {\r\n                this.usuario.token = this.$cookies.get('token');\r\n                this.usuario.cif = this.$cookies.get('cif');\r\n                this.usuario.correo = this.$cookies.get('correo');\r\n                this.usuario.celular = this.$cookies.get('celular');\r\n                this.usuario.pass = this.$cookies.get('pass');\r\n                this.usuario.unidad = this.$cookies.get('unidad');\r\n                this.usuario.sigla = this.$cookies.get('sigla');\r\n\r\n            }\r\n        },\r\n        //Funcion para listar Los Datos del empleado\r\n        async getEmpleado() {\r\n            await this.empleadoService.getEmpleado(this.egovf.cif).then((response) => {\r\n                this.empleado = response.data;\r\n                this.verificado = this.empleado.id;\r\n                this.contratos = this.empleado.contratos;\r\n            });\r\n        },\r\n        async getListarEmpleadoModuloCif() {// Funcion que lista los Modulos del Empleado\r\n            await this.empleadoService.getListarEmpleadoModuloCif(this.egovf.cif).then((response) => {\r\n                this.listaModuloCif = response.data;\r\n            });\r\n        },\r\n        // Funcion para ingresar a otros modulos del Empleado\r\n        getModulo(ruta) {\r\n            this.$router.push({\r\n                name: ruta,\r\n                params: {\r\n                    cifCiudadano: this.egovf.cif,\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>","import { render } from \"./ComponenteMEmpVue.vue?vue&type=template&id=c52cac9a\"\nimport script from \"./ComponenteMEmpVue.vue?vue&type=script&lang=js\"\nexport * from \"./ComponenteMEmpVue.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./UModuloEmpView.vue?vue&type=template&id=71315f62\"\nimport script from \"./UModuloEmpView.vue?vue&type=script&lang=js\"\nexport * from \"./UModuloEmpView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["empleadoUrl","API_URL_EGOVF_EMP","EmpleadoService","getEmpleado","cif","axios","get","params","getListaTipoEmpleado","getListarEmpleadoModuloCif","getListarEmpleadoModulo","addContrato","contrato","fecha","Date","numero","numerocontrato","contratoDtoRequest","toUpperCase","servicio","unidad","inicio","fin","getFullYear","detalle","idTipoEmpleado","cargo","foto","post","updateContrato","contratoDtoResponse","id","gestion","put","getTipoEmpleado","getListaEmpleado","tipo","getEmpleados","getListaModulo","addEmpleadoModulo","modulo","empleadoModuloDtoRequest","id_modulo","updateEmpleadoEliminar","empleado","empleadoDtoResponse","updateFoto","getListaEmpleadoTipo","egovfUrl","API_URL_EGOVF_USER","EgovfService","headersUsuario","token","defaults","headers","common","getEgovf","getListaCiudadano","getListaCiudadanoPublico","_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_createVNode","_component_ComponenteMEmpVue","emp","$data","egovf","class","_createBlock","_component_CRow","default","_withCtx","_component_CCol","lg","_component_CCard","_component_CCardHeader","_createTextVNode","_","_component_CCardBody","xs","_component_CBadge","color","_toDisplayString","salida","estado","key","_renderList","listaModuloCif","l","_hoisted_2","_component_CCardImage","orientation","src","_01nombre","_component_CCardFooter","_component_CButton","_hoisted_3","_hoisted_4","_hoisted_5","contratos","numeroContrato","_hoisted_6","_hoisted_7","name","props","components","data","empleadoService","listaModulo","getPB","tipoempleado_id","usuario","correo","celular","pass","sigla","empleado_modulo","idPersona","nombre","paterno","materno","sexo","idUsuario","matricula","ci","ci_com","complemento","dependiente","beforeCreate","this","$cookies","$router","push","created","mounted","getDatos","updated","methods","then","response","verificado","getModulo","ruta","cifCiudadano","__exports__","ComponenteMEmpVue","titulo","egovfService","render"],"sourceRoot":""}